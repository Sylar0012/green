@charset "UTF-8";
/* wrap : 웹사이트를 전체 싸는 영역 */
#wrap{}

/* header_start---- */
#header{
    background: #dde;
}
#header .logo{
    text-align: center;
    height: 70px;
    line-height: 70px;
    /* padding-top:40px; */   

}
/* 
1) 웹의 큰 구조에서 1번째 자식이 위쪽으로 여백을 가질때 margin속성을 사용하면 실제로는 부모태그의 위로 여백을 가지게 됨. 그래서 margin값을 사용할 수 없음.
=> 대체해서 padding으로 속성값을 적용하기도 함.

2) 내가원하는 높이에서 글자를 세로 가운데 배치하는 공식.
{height:값; line-height:값;}을 통일시키면 됨
 */
#header .gnb{
    border-top: 1px solid #aaa;
    display: flex;
    justify-content: center;
}
/* 
ul, li 둘다 화면 중앙으로 보내는 justify-content: center; 가 안되서
.gnb에 display:flex;, justify-content: center; 를 입력

*/
#header .gnb h2{
    display: none;
    /* 
    시맨틱 태그 사용시 제목태그로 영역 타이틀을 지정해 줘야함.
    실제 ui화면상 표기되지 않을것이므로 아예 삭제함.
    {display:none} 적용시 해당 태그 자체가 아예 작성하지 않은것 처럼 인식함.
    */
}
#header .gnb ul {
    display: flex;
    width: 750px;
    background:#cc2;

}
#header .gnb ul li {
    flex: 0 0 150px;
    height: 80px;
    line-height: 80px;
    text-align: center;
}
/* 
글자 중앙정렬시 ul 보다 li로 많이 씀
height, line-height < 글자 상하 중앙 
flex: 0 0 150px; < 글자 좌우 벌리기
*/
#header .gnb ul li a{
    font-size: 20px;
    font-weight: 700;

}
/* li보다는 a 태그에 글자에 효과를 많이 줌 */
#header .gnb ul li:hover a{
    color: #19f;
}
/*
a:hover로 지정해도 색상은 동일하게 되지만 li:hover를 대상으로 봐야하는 이유는
추후 depth2, 3.... 의 서브매뉴 hover범주까지 고려해야 실제 기능구현이 가능하기 때문에
li대상으로 하는것이 좋다. 
*/
#header .gnb ul .active a{
    color: #19f;
}

/* 
a태그안의 글자색상 변경은 a태그 색상을 변경해야 인식됨. 
:reset.css초기화 설정때 지정한 a 태그의 색상때문.
*/

/* #main_visual start------ */
#main_visual{
    width: 100%;
    height: 700px;
    background: url(../img/main_visual.jpg) no-repeat center 0;
}
/* 
width 는 100% height는 설정값
~ no-repeat center 0; : 반복없음 , 사진 중앙정렬
*/
#main_visual .inner{
    width: 1200px;
    height: 700px;
    background:#cce;
    margin: 0 auto;
    position: relative;
}
/* 
margin: 0 auto; > 가운데 정렬(공식)
== 블록요소 태그를 가운데 배치하는 공식 ==
블록요소태그 { width:값; margin:0 auto;}로 가운데 정렬.
margin:0 auto; 
ㄴ margin-top : 0 
    margin-bottom : 0
    margin-left : auto;
    margin-right : auto;
    => 여백 위아래 0, 여백 왼/오른쪽 auto = 좌우 자동으로 여백배치 해서 가운데 정렬해라 
    margin: 0 auto 0 auto = margin: 0 auto 0 = margin: 0 auto
*/

/* main_visual_text_area----------- */
#main_visual .inner .mv_txt{
    font-size:45px;
    line-height: 51px;
    padding-top: 220px ;
    margin-left: 150px;
    /* 
    웹사이트의 특징상 큰영역구조에 첫번째 자식태그의 top 또는 bottom으로 여백을 지정할 경우
    부모태그 전체로 여백이 지정되는 경우 발생. => margin대신 padding및 다른속성으로 대체사용.
    */
    
}   
#main_visual .inner .mv_txt .tit{
    
}
#main_visual .inner .mv_txt .more{
    width: 150px;
    height: 40px;
    background: #19f;
    text-align: center;
    line-height: 40px;
    margin-top: 40px;
    font-size: 16px;
}

#main_visual .inner .mv_txt .more a{
    display: block;
    color:#fff;
}
/*  display: block; < a태그에 공간값을 줘야함. 안주면 텍스트에만 반응
    a태그는 inline요소로 공간을 가질 수 없음. 글자에만 a링크가 적용되면 ux측면에서 부적합
    파랑버튼 전체를 a링크 대상으로 인식시켜야 하므로 block요소로 처리
*/

#main_visual .inner .btn_prev, #main_visual .inner .btn_next{
    width: 50px;
    height: 50px;
    border-radius: 50px;
    border:2px solid #00f;
    text-align: center;
    line-height: 50px;
    position: absolute; top:50%; margin-top: -27px; left: 50%;
}
/* 
text-align 으로 텍스트 가로중앙 line-height를 높이와 같은값 입력해서 세로중앙
== 태그 가로에서 가운데 배치하는 3가지 공식 ==
1. 인라인 요소 : {text-align:center}
2. 블록요소(기본) : {width:값; margin:0 auto;}
3. 블록요소 : 블록요소 태그가 position속성을 가질때 margin:0 auto; 속성값을 함께 사용할 수 없음 => 적용자체 불가
{position: absolute; left: 50%; margin-left:-현태그 가로너비의 반값; top 또는 bottom:값;}
** 부모태그 공간값이 정확하지 않고, 100% 비율로 기준을 잡고 있을 경우에는 px 고정단위를 적용 할 수 없으므로 %로 위치값을 지정해야함.  
*/
#main_visual .inner .btn_prev{
    margin-left: -600px ;
}
#main_visual .inner .btn_next{
    margin-left: 546px ;
    /* 오른쪽 버튼은 btn_next 의 width 값 빼줌*/
}
/* 
position: absolute; top:50%; margin-top: -27px; left: 50%;  
으로 중앙정렬 했으니 margin으로 좌우 설정.
*/

#main_visual .inner .btn_prev a, #main_visual .inner .btn_next a{
    color: #00f;
    display: block;
}
#main_visual .inner .btn_prev:hover, #main_visual .inner .btn_next:hover{
    background: #00f;
}
#main_visual .inner .btn_prev:hover a , #main_visual .inner .btn_next:hover a{
    color: #fff; 
}
/* a태그에 둘다 직접넣기보단 p태그에 백그라운드, a 태그에 텍스트 컬러 입히는게 좋음 */

/* 코드 중복시 위와 같이 적으면 둘다 적용 */

/* #container_start---------------- */
#container{}

/* 공통 style */
#container .cont_tit{
    font-size:40px;
    text-align: center;
    margin-bottom: 50px;
}
#container .inner{
    width: 1200px;
    margin: 0 auto;
    background: #aea;
}
/* 베스트제품 스타일 == 주요서비스 안내 스타일 */
.cont01{
    background: #8df;
    padding: 100px 0;
}
/* 위 아래 동일하니 큰 틀에 padding으로 적용. 내부마다 주면 꼬임 */
.cont01 .inner{
    width: 1200px;
    background: #cea;
    margin: 0 auto;
}
/* 
product 부모태그. 공간값을 먼저 잡아주기 위해 먼저적음
웹 통일성 위해 header쪽 inner와 동일값 적용.

*/
.cont01 .product{
    display: -webkit-flex;
    display: flex;
    justify-content: space-between;
}
.cont01 .product article{
    width: 580px;
    border: 1px solid #333;    
    background: #fffff0;
        
}
/* 
article에 배경색을 주는 이유는 dl태그에 padding이 아닌 margin이 들어갈수도 있어서
margin을 넣으면 중간에 붕 뜸
*/
.cont01 .product article .photo img{
    width: 100%;
    height: auto;
    background:#cee;
}
.cont01 .product article dl{
    padding: 30px 0;
    text-align: center;
   
}
.cont01 .product article dl dt{
    font-weight: 700;
    font-size: 30px;
    line-height: 30px;
    margin-bottom: 15px;
}

.cont02{
    padding: 80px 0;
}

.cont02 .inner .service{
    display: -webkit-flex;
    display: flex;
    justify-content: space-between;
}
.cont02 .inner .service article{
    width: 285px;
    background: #19f;
}
.cont02 .inner .service article:hover{
    background: #00f;
}
.cont02 .inner .service article .photo{
    width: 285px;
    height: 300px;
    background: #ccc;
}
.cont02 .inner .service article dl{
    padding : 30px 0;
    color:#fff;
    text-align: center;
    
}
.cont02 .inner .service article dl dt{
    font-size: 30px;
    line-height: 34px;
    font-weight: 700px;
    margin-bottom: 10px;
}

/* #footer start---------------------- */

#footer{
    width: 100%;
    height: 150px;
    background: #fce;
    border-top:1px solid #333;
    padding-top:30px;/* h180 */
}
/* 이미 height 가 180으로 정해져있기 때문에 아래쪽 여백은 필요하지 않음.*/
#footer_inner{
    width: 1200px;
    margin: 0 auto;
    background: #fc0;
    display: -webkit-flex;
    display: flex;
    justify-content: space-between;
}
#footer_inner .flogo{
    font-size: 30px;
    line-height: 30px;
    font-weight: 700;
}
#footer_inner .footer_info{}
#footer_inner .footer_info .fmenu{
    margin-bottom: 15px;
}
#footer_inner .footer_info .fmenu ul{
    display: -webkit-flex;
    display: flex;
    width: 600px;
    background: #cca;
    justify-content: space-between;
}
#footer_inner .footer_info .fmenu ul li{
    border-right: 1px solid #333;
    flex:0 1 110px;
    text-align: center;
}

#footer_inner .footer_info .fmenu ul li:nth-child(1){
    text-align: left;
    flex : 0 1 80px;
}
#footer_inner .footer_info .fmenu ul li:nth-child(2){
flex:0 1 150px;
}
#footer_inner .footer_info .fmenu ul li:last-child{
    border: none;
}
.finfo{
    font-size: 14px;

}
.copy{
    font-size: 12px;
}

.family{
    width: 150px;
    height: 30px;
    border: 1px solid #333;
    border-radius: 30px;
    text-align: center;
    line-height: 30px;
}
.family a{
    display: block;
}
.family:hover{
    background: #19f;
    border-color: #19f;
}
/* border-color : #~~~ border의 색만 바꿔줌 */
.family:hover a{
    color: #fff;
}